[project]
name = "CanrotBot"
version = "9.0.0"
authors = [
    { name = "wangyw15", email = "wangyanwei15@outlook.com" }
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.12"
dependencies = [
    "nonebot2[fastapi]",
    "nonebot-plugin-apscheduler",
    "nonebot-adapter-onebot",
    "nonebot-adapter-kaiheila",
    "nonebot-adapter-mirai2",
    "nonebot-adapter-qq",
    "nonebot-adapter-console",
    "pydantic>=2",
    "beautifulsoup4",
    "httpx",
    "pillow",
    "playwright",
    "tencentcloud-sdk-python",
    "sqlalchemy>=2",
    "nonebot-plugin-alconna",
    "cryptography",
    "anyio",
    "nonechat",
    "hishel",
    "ollama",
    "openai",
]

[project.scripts]
bot = "canrotbot:run"

[dependency-groups]
dev = [
    "nonebug>=0.4.1",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "pytest>=8.3.3",
]
lint = [
    "ruff",
]
build = [
    "nuitka"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = [
    "src",
    "src/canrotbot",
]
testpaths = [
    "tests",
]
# pytest-asyncio
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py312"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = ["I", "F"]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"
